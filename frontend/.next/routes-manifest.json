{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/admin/login",
      "regex": "^/admin/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/login(?:/)?$"
    },
    {
      "page": "/admin/orders",
      "regex": "^/admin/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/orders(?:/)?$"
    },
    {
      "page": "/find-tires",
      "regex": "^/find\\-tires(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/find\\-tires(?:/)?$"
    },
    {
      "page": "/promotions",
      "regex": "^/promotions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/promotions(?:/)?$"
    },
    {
      "page": "/repair-services",
      "regex": "^/repair\\-services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/repair\\-services(?:/)?$"
    },
    {
      "page": "/tire-knowledge",
      "regex": "^/tire\\-knowledge(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tire\\-knowledge(?:/)?$"
    },
    {
      "page": "/tire-order",
      "regex": "^/tire\\-order(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tire\\-order(?:/)?$"
    },
    {
      "page": "/tire-series",
      "regex": "^/tire\\-series(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tire\\-series(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}